{"version":3,"sources":["components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getInitialState","staffs","remaining_persons","absent_persons","tag_input_visible","tag_input_value","data_source","chat_content","popconfirm_visible","modal_visible","modal_loading","email_to","email_cc","email_subject","email_message","handleCloseTag","e","name","preventDefault","new_absent_persons","state","filter","absent_person","setState","updateAbsentPersons","showTagInput","target","focus","handleSearch","value","new_data_source","indexOf","handleSelect","push","handleTagInputCancel","handleContentChange","handleCheckButton","payload","checkContent","handleGenerateButton","generateEmail","handleShowModal","handleModalSendEmail","setTimeout","message","success","error","handleModalReturn","handleEmailToChange","handleEmailCcChange","handleEmailSubjectChange","handleEmailMessageChange","handlePopConfirmConfirm","handlePopConfirmCancel","handlePopConfirmVisibleChange","visible","beforeGenerateEmail","handleClearIcon","req_host","req_port","getData","_this2","fetch","method","then","res","json","data","catch","err","cur_absent_persons","body","JSON","stringify","_this3","_this4","to","cc","subject","_this5","length","info","_this6","TextArea","Input","Text","Typography","Header","Layout","Content","Footer","react_default","a","createElement","layout","className","icon","type","theme","es_form","Item","tooltip","placement","style","width","title","onClick","rows","placeholder","resize","onChange","map","person","tag","key","color","closable","onClose","auto_complete","dataSource","onSelect","onSearch","onBlur","autoFocus","background","borderStyle","es_button","size","popconfirm","onVisibleChange","onConfirm","onCancel","okText","cancelText","es_alert","showIcon","description","copyable","text","modal","onOk","footer","loading","keyboard","maskClosable","destroyOnClose","labelCol","span","wrapperCol","label","input","suffix","textAlign","href","rel","Component","App","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e21a6307.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {  message, Tooltip, Layout, Typography, Popconfirm, Modal, AutoComplete, Tag, Alert, Icon, Button, Form, Input} from 'antd';\nimport \"antd/dist/antd.css\";\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.req_host = '127.0.0.1';\n        this.req_port = '8012';\n\n        this.state = this.getInitialState();\n        this.getData();\n    }\n\n    getInitialState = () => ({\n        staffs: [],\n        remaining_persons: [\"点击 '还有谁！'，看看到底是谁还没发晨报！\"],\n        absent_persons: [],\n        tag_input_visible: false,\n        tag_input_value: '',\n        data_source: [],\n        chat_content: '',\n        popconfirm_visible: false,\n\n        modal_visible: false,\n        modal_loading: false,\n        email_to: '',\n        email_cc: '',\n        email_subject: '',\n        email_message: '',\n    });\n\n    // ----------------\n    // |   Requests   |\n    // ----------------\n\n    getData() {\n        let endpoint = 'init';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint,{\n            method: 'GET'\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    staffs: data.staffs,\n                    absent_persons: data.absent_persons\n                });\n            }\n        ).catch((err) =>message.error(\"Server error!\", err))\n    }\n\n    updateAbsentPersons(cur_absent_persons) {\n        let endpoint = 'update';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint,{\n            method: 'POST',\n            body: JSON.stringify({'absent_persons': cur_absent_persons})\n        }).catch((err) =>message.error(\"Server error!\", err))\n    }\n\n    checkContent(payload) {\n        let endpoint = 'check';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint,{\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    remaining_persons: data.remaining_persons\n                });\n            }\n        ).catch((err) =>message.error(\"Server error!\", err))\n    }\n\n    generateEmail(payload) {\n        let endpoint = 'generate';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint,{\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    email_to: data.to,\n                    email_cc: data.cc,\n                    email_subject: data.subject,\n                    email_message: data.message,\n                });\n            }\n        ).catch((err) =>message.error(\"Server error!\", err))\n    }\n\n    beforeGenerateEmail(payload) {\n        let endpoint = 'check';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint,{\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    remaining_persons: data.remaining_persons\n                });\n            }\n        ).then(\n            () => {\n                if (this.state.remaining_persons.length <= 0) {\n                    this.handlePopConfirmConfirm();\n                    message.info(\"不可思议！所有人都发了晨报！\")\n                } else {\n                    this.setState({ popconfirm_visible: true });\n                }\n            }\n        ).catch((err) =>message.error(\"Server error!\", err))\n    }\n\n    // ----------------\n    // |   Handlers   |\n    // ----------------\n\n    handleCloseTag = (e, name) => {\n        e.preventDefault();  // must prevent the original close animation ... why??\n        const new_absent_persons = this.state.absent_persons.filter(absent_person => absent_person !== name);\n        this.setState({\n            absent_persons: new_absent_persons\n        });\n        this.updateAbsentPersons(new_absent_persons);\n    };\n\n    showTagInput = (e) => {\n        this.setState({\n            tag_input_visible: true\n        });\n        e.target.focus();\n    };\n\n    handleSearch = (value) => {\n        const new_data_source = this.state.staffs.filter(name =>\n            this.state.absent_persons.indexOf(name) === -1 && name.indexOf(value) >= 0);\n        this.setState({\n            data_source: new_data_source\n        });\n    };\n\n    handleSelect = (value) => {\n        const new_absent_persons = this.state.absent_persons;\n        new_absent_persons.push(value);\n        this.setState({\n            absent_persons: new_absent_persons,\n            tag_input_visible: false\n        });\n        this.updateAbsentPersons(new_absent_persons);\n    };\n\n    handleTagInputCancel = () => {\n        this.setState({\n            tag_input_visible: false\n        });\n    };\n\n    handleContentChange = (e) => {\n        this.setState({\n            chat_content: e.target.value\n        });\n    };\n\n    handleCheckButton = () => {\n        const payload = {\n            'chat_content': this.state.chat_content,\n            'absent_persons': this.state.absent_persons};\n        this.checkContent(payload);\n    };\n\n    handleGenerateButton = () => {\n        const payload = {\n            'chat_content': this.state.chat_content,\n            'absent_persons': this.state.absent_persons};\n        this.generateEmail(payload);\n        this.handleShowModal();\n    };\n\n    handleShowModal = () => {\n        this.setState({\n            modal_visible: true,\n        });\n    };\n\n    handleModalSendEmail = () => {\n        // TODO Really send email\n        this.setState({ modal_loading: true });\n        setTimeout(() => {\n            this.setState({\n                modal_loading: false\n            });\n            message.success(\"已发送\");\n        }, 2000);\n        setTimeout(() => {\n            message.error(\"假的，愚人节快乐！\");\n        }, 5000);\n        setTimeout(() => {\n            message.error(\"该功能预计于v2.0版本上线\")\n        }, 8000);\n    };\n\n    handleModalReturn = () => {\n        this.setState({ modal_visible: false });\n    };\n\n    handleEmailToChange = (e) => {\n        this.setState({\n            email_to: e.target.value\n        });\n    };\n\n    handleEmailCcChange = (e) => {\n        this.setState({\n            email_cc: e.target.value\n        });\n    };\n\n    handleEmailSubjectChange = (e) => {\n        this.setState({\n            email_subject: e.target.value\n        });\n    };\n\n    handleEmailMessageChange = (e) => {\n        this.setState({\n            email_message: e.target.value\n        });\n    };\n\n    handlePopConfirmConfirm = () => {\n        this.setState({ popconfirm_visible: false });\n        this.handleGenerateButton();\n    };\n\n    handlePopConfirmCancel = () => {\n        this.setState({ popconfirm_visible: false });\n    };\n\n    handlePopConfirmVisibleChange = (visible) => {\n        if (!visible) {\n            this.setState({ popconfirm_visible: visible });\n            return;\n        }\n        const payload = {\n            'chat_content': this.state.chat_content,\n            'absent_persons': this.state.absent_persons\n        };\n        this.beforeGenerateEmail(payload);  // must set visible after check remaining persons\n    };\n\n    handleClearIcon = () => {\n        this.setState({\n            chat_content: ''\n        });\n    };\n\n    render() {\n\n        const { TextArea } = Input;\n\n        const { Text } = Typography;\n\n        const { Header, Content, Footer } = Layout;\n\n        return (\n            <Layout className=\"layout\">\n                <Header className='header'>\n                    <Icon type=\"schedule\" theme=\"filled\" />\n                    &nbsp;&nbsp;&nbsp;\n                    <span className='title'><b>晨报易</b></span>\n                    &nbsp;&nbsp;&nbsp;\n                    <span className='subtitle'>晨报处理更容易</span>\n                </Header>\n                <Content className=\"content\">\n                    <div>\n                        <div className='form_area'>\n                            <Form.Item>\n                                <h1 className=\"label\">\n                                    <Tooltip placement=\"bottomLeft\" style={{ width: \"300px\" }} title={<span>以姓名开头的QQ消息被认为是有效的晨报<br/>复制时请尽量避免遗漏内容</span>}>\n                                        <span><Icon type=\"file-text\" />&nbsp;&nbsp;聊天记录</span>\n                                    </Tooltip>\n                                </h1>\n                                <label>在这里复制晨报群里今天所有的QQ聊天记录，晨报易会自动检测和去除无关内容，重新排版并生成邮件</label>\n                                <div className=\"clear_icon_area\"><Icon onClick={this.handleClearIcon} type=\"delete\" /></div>\n                                <TextArea rows={10} placeholder=\"Content in QQ group\" style={{ resize: 'none' }}\n                                          value={this.state.chat_content}\n                                          onChange={this.handleContentChange}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <h1 className=\"label\">\n                                    <Tooltip placement=\"bottomLeft\" title=\"对请假人员的修改将会被保存\">\n                                        <span><Icon type=\"user\" />&nbsp;&nbsp;请假人员</span>\n                                    </Tooltip>\n                                </h1>\n                                {this.state.absent_persons.map((person) => {\n                                    return <Tag key={person} color=\"red\" closable\n                                                onClose={(e)=>{this.handleCloseTag(e, person)}}>{person}</Tag>\n                                })}\n                                {this.state.tag_input_visible && (\n                                    <AutoComplete\n                                        dataSource={this.state.data_source}\n                                        style={{ width: 100 }}\n                                        onSelect={this.handleSelect}\n                                        onSearch={this.handleSearch}\n                                        onBlur={this.handleTagInputCancel}\n                                        placeholder=\"Name\"\n                                        autoFocus\n                                    />\n                                )}\n                                {!this.state.tag_input_visible && (\n                                    <Tag\n                                        color=\"red\"\n                                        onClick={this.showTagInput}\n                                        style={{ background: '#fff', borderStyle: 'dashed' }}\n                                    >\n                                        <Icon type=\"plus\" /> Person\n                                    </Tag>\n                                )}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item>\n                                <div className=\"button_area\">\n                                    <Button type=\"default\" size=\"large\" onClick={this.handleCheckButton}>还有谁！</Button>\n                                    <Popconfirm title={\"仍有\" + this.state.remaining_persons.length + \"人未发晨报，是否继续生成邮件？\"}\n                                                visible={this.state.popconfirm_visible}\n                                                onVisibleChange={this.handlePopConfirmVisibleChange}\n                                                onConfirm={this.handlePopConfirmConfirm}\n                                                onCancel={this.handlePopConfirmCancel}\n                                                okText=\"继续\"\n                                                cancelText=\"取消\">\n                                        <Button type=\"primary\" size=\"large\">生成邮件</Button>\n                                    </Popconfirm>\n                                </div>\n                            </Form.Item>\n                            <br/>\n                        </div>\n                        <div className='alert_area'>\n                            <Alert className='alert' message='未发晨报' type=\"info\" showIcon\n                                   description={\n                                       <div>\n                                           <br/>\n                                           <p>{this.state.remaining_persons.map(\n                                               (person) => person + ' ')}</p>\n                                           <p><Text copyable={{\n                                               text: this.state.remaining_persons.map((person) => '@' + person)\n                                           }}>（复制到QQ）</Text></p>\n                                       </div>\n                                   }/>\n                        </div>\n\n                        <Modal\n                            width=\"60%\"\n                            className=\"modal\"\n                            visible={this.state.modal_visible}\n                            title=\"北京晨报邮件\"\n                            onOk={this.handleModalSendEmail}\n                            onCancel={this.handleModalReturn}\n                            footer={[\n                                <Button key=\"back\" onClick={this.handleModalReturn}>返回</Button>,\n                                <Button key=\"submit\" type=\"primary\" loading={this.state.modal_loading} onClick={this.handleModalSendEmail}>\n                                    发送邮件\n                                </Button>\n                            ]}\n                            closable={false}\n                            keyboard={false}\n                            maskClosable={false}\n                            destroyOnClose\n                        >\n                            <Form labelCol={{ span: 4 }} wrapperCol={{ span: 16 }}>\n                                <Form.Item label=\"收件人\">\n                                    <Input value={this.state.email_to} onChange={this.handleEmailToChange}\n                                           suffix={<Text copyable={{ text: this.state.email_to }}/>}/>\n                                </Form.Item>\n                                <Form.Item label=\"抄送\">\n                                    <Input value={this.state.email_cc} onChange={this.handleEmailCcChange}\n                                           suffix={<Text copyable={{ text: this.state.email_cc }}/>}/>\n                                </Form.Item>\n                                <Form.Item label=\"主题\">\n                                    <Input value={this.state.email_subject} onChange={this.handleEmailSubjectChange}\n                                           suffix={<Text copyable={{ text: this.state.email_subject }}/>}/>\n                                </Form.Item>\n                                <Form.Item label=\"正文\">\n                                    <TextArea style={{ resize: 'none' }}\n                                              rows={10}\n                                              value={this.state.email_message}\n                                              onChange={this.handleEmailMessageChange}\n                                    />\n                                    <Text copyable={{ text: this.state.email_message }}/>\n                                </Form.Item>\n                            </Form>\n                        </Modal>\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>\n                    Created by <a href={\"https://www.minghao23.com\"} target=\"_blank\" rel=\"noopener noreferrer\">Minghao Hu</a> ©2019\n                </Footer>\n            </Layout>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Home from \"./components/Home\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Home/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}