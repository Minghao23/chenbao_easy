{"version":3,"sources":["components/MyLayout.js","components/config.js","components/Home.js","components/StatForm.js","components/PersonHistory.js","components/PersonStat.js","components/TotalStat.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Footer","Sider","MySider","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollapse","collapsed","setState","state","inherits","createClass","key","value","react_default","a","createElement","collapsible","menu","defaultSelectedKeys","mode","theme","inlineCollapsed","Item","react_router_dom","to","icon","type","Component","MyHeader","className","MyFooter","style","textAlign","href","target","rel","host","port","Home","getInitialState","staffs","remaining_persons","absent_persons","tag_input_visible","tag_input_value","data_source","chat_content","popconfirm_visible","modal_visible","modal_loading","email_to","email_cc","email_subject","email_message","handleCloseTag","e","name","preventDefault","new_absent_persons","filter","absent_person","updateAbsentPersons","showTagInput","focus","handleSearch","new_data_source","indexOf","handleSelect","push","handleTagInputCancel","handleContentChange","handleCheckButton","payload","checkContent","handleGenerateButton","generateEmail","handleShowModal","handleModalSendEmail","setTimeout","message","success","error","handleModalReturn","handleEmailToChange","handleEmailCcChange","handleEmailSubjectChange","handleEmailMessageChange","handlePopConfirmConfirm","handlePopConfirmCancel","handlePopConfirmVisibleChange","visible","beforeGenerateEmail","handleClearIcon","req_host","req_port","getData","_this2","fetch","method","then","res","json","data","catch","err","cur_absent_persons","body","JSON","stringify","_this3","_this4","cc","subject","_this5","length","info","_this6","TextArea","Input","Text","Typography","Content","layout","MyLayout_MyHeader","es_form","tooltip","placement","width","title","onClick","rows","placeholder","resize","onChange","map","person","tag","color","closable","onClose","auto_complete","dataSource","onSelect","onSearch","onBlur","autoFocus","background","borderStyle","es_button","size","popconfirm","onVisibleChange","onConfirm","onCancel","okText","cancelText","es_alert","showIcon","description","copyable","text","modal","onOk","footer","loading","keyboard","maskClosable","destroyOnClose","labelCol","span","wrapperCol","label","input","suffix","MyLayout_MyFooter","StatForm","start_date","moment","add","format","end_date","handlerSubmit","handler","handleEnterKey","which","handleConfirmButton","dropname","handleNameChange","handleRangePicker","date","dateString","disabledDate","current","endOf","getNameInput","onKeyPress","RangePicker","DatePicker","defaultValue","ranges","Today","This Month","startOf","Last 10 Days","Last 3 Months","Last Year","allowClear","PersonHistory","history","handleFormSubmit","inputs","personHistory","getStaffs","historys","i","content","columns","dataIndex","render","toString","record","text_split","split","result","StatForm_StatForm","table","pagination","pageSize","PersonStat","dates","send_times","you_diff","total_average","earliest_person","earliest_diff","latest_person","latest_diff","personStat","timeValueLabelFormat","index","hour","Math","floor","minute","timeValueTooltipFormat","params","axisValue","isNaN","concat","second","timeValueMarklineFormat","colorTimeDiff","diff","getOption","trigger","formatter","xAxis","yAxis","min","max","splitNumber","axisLabel","series","itemStyle","normal","markLine","temp_send_times","temp_dates","cur_time_value","time","row","col","padding","Charts","total","contentHeight","lib_default","option","height","TotalStat","send_persons","totalStat","getDatePickerShortCut","shortcut","tmp_start_date","init_start_date","tmp_end_date","init_end_date","legend","stack","temp_send_persons","temp_absent_persons","sent_cb_person","App","minHeight","MyLayout_MySider","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd4e6224.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Icon, Layout, Menu} from \"antd\";\nimport {Link} from 'react-router-dom'\n\nconst {Header, Footer, Sider} = Layout;\n\nexport class MySider extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collapsed: true,\n        };\n    }\n\n    onCollapse = collapsed => {\n        this.setState({collapsed});\n    };\n\n    render() {\n        return (\n            <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n                <Menu\n                    defaultSelectedKeys={['1']}\n                    mode=\"inline\"\n                    theme=\"dark\"\n                    inlineCollapsed={this.state.collapsed}\n                >\n                    <Menu.Item key=\"1\">\n                        <Link to=\"/\">\n                            <Icon type=\"home\"/>\n                            <span>主页</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <Link to=\"/PersonHistory\">\n                            <Icon type=\"file-search\"/>\n                            <span>历史查询</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"3\">\n                        <Link to=\"/PersonStat\">\n                            <Icon type=\"line-chart\"/>\n                            <span>个人数据</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"4\">\n                        <Link to=\"/TotalStat\">\n                            <Icon type=\"bar-chart\"/>\n                            <span>全局统计</span>\n                        </Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n        )\n    }\n}\n\n\nexport const MyHeader = () =>\n    <Header className='header'>\n        <Icon type=\"schedule\" theme=\"filled\"/>\n        &nbsp;&nbsp;&nbsp;\n        <span className='title'><b>晨报易</b></span>\n        &nbsp;&nbsp;&nbsp;\n        <span className='subtitle'>晨报处理更容易</span>\n    </Header>;\n\n\nexport const MyFooter = () =>\n    <Footer style={{textAlign: 'center'}}>\n        Created by <a href={\"https://www.minghao23.com\"} target=\"_blank\" rel=\"noopener noreferrer\">Minghao Hu</a> ©2019\n    </Footer>;\n\n","export const host = 'localhost';\nexport const port = '8012';","import React, {Component} from 'react';\nimport {\n    message,\n    Tooltip,\n    Layout,\n    Typography,\n    Popconfirm,\n    Modal,\n    AutoComplete,\n    Tag,\n    Alert,\n    Icon,\n    Button,\n    Form,\n    Input\n} from 'antd';\nimport \"antd/dist/antd.css\";\nimport {MyHeader, MyFooter} from \"./MyLayout\"\nimport {host, port} from \"./config\"\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.req_host = host;\n        this.req_port = port;\n\n        this.state = this.getInitialState();\n        this.getData();\n    }\n\n    getInitialState = () => ({\n        staffs: [],\n        remaining_persons: [\"点击 '还有谁！'，看看到底是谁还没发晨报！\"],\n        absent_persons: [],\n        tag_input_visible: false,\n        tag_input_value: '',\n        data_source: [],\n        chat_content: '',\n        popconfirm_visible: false,\n\n        modal_visible: false,\n        modal_loading: false,\n        email_to: '',\n        email_cc: '',\n        email_subject: '',\n        email_message: '',\n    });\n\n    // ----------------\n    // |   Requests   |\n    // ----------------\n\n    getData() {\n        let endpoint = 'init';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'GET'\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    staffs: data.staffs,\n                    absent_persons: data.absent_persons\n                });\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    updateAbsentPersons(cur_absent_persons) {\n        let endpoint = 'update';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'POST',\n            body: JSON.stringify({'absent_persons': cur_absent_persons})\n        }).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    checkContent(payload) {\n        let endpoint = 'check';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    remaining_persons: data.remaining_persons\n                });\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    generateEmail(payload) {\n        let endpoint = 'generate';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    email_to: data.to,\n                    email_cc: data.cc,\n                    email_subject: data.subject,\n                    email_message: data.message,\n                });\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    beforeGenerateEmail(payload) {\n        let endpoint = 'check';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    remaining_persons: data.remaining_persons\n                });\n            }\n        ).then(\n            () => {\n                if (this.state.remaining_persons.length <= 0) {\n                    this.handlePopConfirmConfirm();\n                    message.info(\"不可思议！所有人都发了晨报！\")\n                } else {\n                    this.setState({popconfirm_visible: true});\n                }\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    // ----------------\n    // |   Handlers   |\n    // ----------------\n\n    handleCloseTag = (e, name) => {\n        e.preventDefault();  // must prevent the original close animation ... why??\n        const new_absent_persons = this.state.absent_persons.filter(absent_person => absent_person !== name);\n        this.setState({\n            absent_persons: new_absent_persons\n        });\n        this.updateAbsentPersons(new_absent_persons);\n    };\n\n    showTagInput = (e) => {\n        this.setState({\n            tag_input_visible: true\n        });\n        e.target.focus();\n    };\n\n    handleSearch = (value) => {\n        const new_data_source = this.state.staffs.filter(name =>\n            this.state.absent_persons.indexOf(name) === -1 && name.indexOf(value) >= 0);\n        this.setState({\n            data_source: new_data_source\n        });\n    };\n\n    handleSelect = (value) => {\n        const new_absent_persons = this.state.absent_persons;\n        new_absent_persons.push(value);\n        this.setState({\n            absent_persons: new_absent_persons,\n            tag_input_visible: false\n        });\n        this.updateAbsentPersons(new_absent_persons);\n    };\n\n    handleTagInputCancel = () => {\n        this.setState({\n            tag_input_visible: false\n        });\n    };\n\n    handleContentChange = (e) => {\n        this.setState({\n            chat_content: e.target.value\n        });\n    };\n\n    handleCheckButton = () => {\n        const payload = {\n            'chat_content': this.state.chat_content,\n            'absent_persons': this.state.absent_persons\n        };\n        this.checkContent(payload);\n    };\n\n    handleGenerateButton = () => {\n        const payload = {\n            'chat_content': this.state.chat_content,\n            'absent_persons': this.state.absent_persons\n        };\n        this.generateEmail(payload);\n        this.handleShowModal();\n    };\n\n    handleShowModal = () => {\n        this.setState({\n            modal_visible: true,\n        });\n    };\n\n    handleModalSendEmail = () => {\n        // TODO Really send email\n        this.setState({modal_loading: true});\n        setTimeout(() => {\n            this.setState({\n                modal_loading: false\n            });\n            message.success(\"已发送\");\n        }, 2000);\n        setTimeout(() => {\n            message.error(\"哈哈哈骗你的！\");\n        }, 5000);\n        setTimeout(() => {\n            message.error(\"该功能预计于v2.0版本上线\")\n        }, 8000);\n    };\n\n    handleModalReturn = () => {\n        this.setState({modal_visible: false});\n    };\n\n    handleEmailToChange = (e) => {\n        this.setState({\n            email_to: e.target.value\n        });\n    };\n\n    handleEmailCcChange = (e) => {\n        this.setState({\n            email_cc: e.target.value\n        });\n    };\n\n    handleEmailSubjectChange = (e) => {\n        this.setState({\n            email_subject: e.target.value\n        });\n    };\n\n    handleEmailMessageChange = (e) => {\n        this.setState({\n            email_message: e.target.value\n        });\n    };\n\n    handlePopConfirmConfirm = () => {\n        this.setState({popconfirm_visible: false});\n        this.handleGenerateButton();\n    };\n\n    handlePopConfirmCancel = () => {\n        this.setState({popconfirm_visible: false});\n    };\n\n    handlePopConfirmVisibleChange = (visible) => {\n        if (!visible) {\n            this.setState({popconfirm_visible: visible});\n            return;\n        }\n        const payload = {\n            'chat_content': this.state.chat_content,\n            'absent_persons': this.state.absent_persons\n        };\n        this.beforeGenerateEmail(payload);  // must set visible after check remaining persons\n    };\n\n    handleClearIcon = () => {\n        this.setState({\n            chat_content: ''\n        });\n    };\n\n    render() {\n\n        const {TextArea} = Input;\n\n        const {Text} = Typography;\n\n        const {Content} = Layout;\n\n        return (\n            <Layout className=\"layout\">\n                <MyHeader/>\n                <Content className=\"content\">\n                    <div>\n                        <div className='form_area'>\n                            <Form.Item>\n                                <h1 className=\"label\">\n                                    <Tooltip placement=\"bottomLeft\" style={{width: \"300px\"}}\n                                             title={<span>以姓名开头的QQ消息被认为是有效的晨报<br/>复制时请尽量避免遗漏内容</span>}>\n                                        <span><Icon type=\"file-text\"/>&nbsp;&nbsp;聊天记录</span>\n                                    </Tooltip>\n                                </h1>\n                                <label>在这里复制晨报群里今天所有的QQ聊天记录，晨报易会自动检测和去除无关内容，重新排版并生成邮件</label>\n                                <div className=\"clear_icon_area\"><Icon onClick={this.handleClearIcon} type=\"delete\"/>\n                                </div>\n                                <TextArea rows={10} placeholder=\"Content in QQ group\" style={{resize: 'none'}}\n                                          value={this.state.chat_content}\n                                          onChange={this.handleContentChange}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <h1 className=\"label\">\n                                    <Tooltip placement=\"bottomLeft\" title=\"对请假人员的修改将会被保存\">\n                                        <span><Icon type=\"user\"/>&nbsp;&nbsp;请假人员</span>\n                                    </Tooltip>\n                                </h1>\n                                {this.state.absent_persons.map((person) => {\n                                    return <Tag key={person} color=\"red\" closable\n                                                onClose={(e) => {\n                                                    this.handleCloseTag(e, person)\n                                                }}>{person}</Tag>\n                                })}\n                                {this.state.tag_input_visible && (\n                                    <AutoComplete\n                                        dataSource={this.state.data_source}\n                                        style={{width: 100}}\n                                        onSelect={this.handleSelect}\n                                        onSearch={this.handleSearch}\n                                        onBlur={this.handleTagInputCancel}\n                                        placeholder=\"Name\"\n                                        autoFocus\n                                    />\n                                )}\n                                {!this.state.tag_input_visible && (\n                                    <Tag\n                                        color=\"red\"\n                                        onClick={this.showTagInput}\n                                        style={{background: '#fff', borderStyle: 'dashed'}}\n                                    >\n                                        <Icon type=\"plus\"/> Person\n                                    </Tag>\n                                )}\n                            </Form.Item>\n                            <br/>\n                            <Form.Item>\n                                <div className=\"button_area\">\n                                    <Button type=\"default\" size=\"large\" onClick={this.handleCheckButton}>还有谁！</Button>\n                                    <Popconfirm title={\"仍有\" + this.state.remaining_persons.length + \"人未发晨报，是否继续生成邮件？\"}\n                                                visible={this.state.popconfirm_visible}\n                                                onVisibleChange={this.handlePopConfirmVisibleChange}\n                                                onConfirm={this.handlePopConfirmConfirm}\n                                                onCancel={this.handlePopConfirmCancel}\n                                                okText=\"继续\"\n                                                cancelText=\"取消\">\n                                        <Button type=\"primary\" size=\"large\">生成邮件</Button>\n                                    </Popconfirm>\n                                </div>\n                            </Form.Item>\n                            <br/>\n                        </div>\n                        <div className='alert_area'>\n                            <Alert className='alert' message='未发晨报' type=\"info\" showIcon\n                                   description={\n                                       <div>\n                                           <br/>\n                                           <p>{this.state.remaining_persons.map(\n                                               (person) => person + ' ')}</p>\n                                           <p><Text copyable={{\n                                               text: this.state.remaining_persons.map((person) => '@' + person) + \"（QQ目前不支持拷贝@操作，仍需要手动@）\"\n                                           }}>（复制到QQ）</Text></p>\n                                       </div>\n                                   }/>\n                        </div>\n\n                        <Modal\n                            width=\"60%\"\n                            className=\"modal\"\n                            visible={this.state.modal_visible}\n                            title=\"北京晨报邮件\"\n                            onOk={this.handleModalSendEmail}\n                            onCancel={this.handleModalReturn}\n                            footer={[\n                                <Button key=\"back\" onClick={this.handleModalReturn}>返回</Button>,\n                                <Button key=\"submit\" type=\"primary\" loading={this.state.modal_loading}\n                                        onClick={this.handleModalSendEmail}>\n                                    发送邮件\n                                </Button>\n                            ]}\n                            closable={false}\n                            keyboard={false}\n                            maskClosable={false}\n                            destroyOnClose\n                        >\n                            <Form labelCol={{span: 4}} wrapperCol={{span: 16}}>\n                                <Form.Item label=\"收件人\">\n                                    <Input value={this.state.email_to} onChange={this.handleEmailToChange}\n                                           suffix={<Text copyable={{text: this.state.email_to}}/>}/>\n                                </Form.Item>\n                                <Form.Item label=\"抄送\">\n                                    <Input value={this.state.email_cc} onChange={this.handleEmailCcChange}\n                                           suffix={<Text copyable={{text: this.state.email_cc}}/>}/>\n                                </Form.Item>\n                                <Form.Item label=\"主题\">\n                                    <Input value={this.state.email_subject} onChange={this.handleEmailSubjectChange}\n                                           suffix={<Text copyable={{text: this.state.email_subject}}/>}/>\n                                </Form.Item>\n                                <Form.Item label=\"正文\">\n                                    <TextArea style={{resize: 'none'}}\n                                              rows={10}\n                                              value={this.state.email_message}\n                                              onChange={this.handleEmailMessageChange}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </Modal>\n                    </div>\n                </Content>\n                <MyFooter/>\n            </Layout>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {Form, DatePicker, Button, Input, message} from 'antd';\nimport moment from \"moment\";\n\nexport default class StatForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        name: '',\n        start_date: moment().add(-10, 'days').format(\"YYYYMMDD\"),\n        end_date: moment().format(\"YYYYMMDD\"),\n    });\n\n    handlerSubmit = () => {\n        this.props.handler(this.state)\n    };\n\n    handleEnterKey = (e) => {\n        if (e.which !== 13) return;\n        if (this.props.staffs.indexOf(this.state.name) === -1) {\n            message.error('该员工姓名不存在！');\n            return\n        }\n        this.handlerSubmit()\n    };\n\n    handleConfirmButton = (e) => {\n        if (!this.props.dropname && this.props.staffs.indexOf(this.state.name) === -1) {\n            message.error('该员工姓名不存在！');\n            return\n        }\n        this.handlerSubmit()\n    };\n\n    handleNameChange = (e) => {\n        this.setState({\n            name: e.target.value\n        });\n    };\n\n    handleRangePicker = (date, dateString) => {\n        this.setState({\n            start_date: date[0].format(\"YYYYMMDD\"),\n            end_date: date[1].format(\"YYYYMMDD\"),\n        });\n    };\n\n    disabledDate = (current) => {\n        return current > moment().endOf('day');\n    };\n\n    getNameInput = () => {\n        if (this.props.dropname) {\n            return null\n        } else {\n            return <Form.Item label=\"姓名\">\n                <Input\n                    type=\"text\"\n                    size=\"default\"\n                    onChange={this.handleNameChange}\n                    onKeyPress={this.handleEnterKey}\n                />\n            </Form.Item>\n        }\n    };\n\n    render() {\n        const {RangePicker} = DatePicker;\n\n        return (\n            <Form layout=\"inline\">\n                {this.getNameInput()}\n                <Form.Item label=\"日期\">\n                    <RangePicker\n                        defaultValue={[\n                            moment(this.state.start_date, 'YYYYMMDD'),\n                            moment(this.state.end_date, 'YYYYMMDD')\n                        ]}\n                        disabledDate={this.disabledDate}\n                        ranges={{\n                            Today: [moment(), moment()],\n                            'This Month': [moment().startOf('month'), moment().endOf('month')],\n                            'Last 10 Days': [moment().add(-10, 'days'), moment()],\n                            'Last 3 Months': [moment().add(-3, 'months'), moment()],\n                            'Last Year': [moment().add(-1, 'year'), moment()],\n                        }}\n                        onChange={this.handleRangePicker}\n                        allowClear={false}/>\n                </Form.Item>\n                <Form.Item>\n                    <div className=\"button_area\">\n                        <Button type=\"primary\"\n                                size=\"default\"\n                                onClick={this.handleConfirmButton}\n                        >确认</Button>\n                    </div>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport {Table, message, Layout} from 'antd';\nimport \"antd/dist/antd.css\";\nimport moment from \"moment\";\nimport StatForm from \"./StatForm\";\nimport {MyHeader, MyFooter} from \"./MyLayout\"\nimport {host, port} from \"./config\"\n\nexport default class PersonHistory extends Component {\n    constructor(props) {\n        super(props);\n        this.req_host = host;\n        this.req_port = port;\n\n        this.state = this.getInitialState();\n        this.getStaffs();\n    }\n\n    getInitialState = () => ({\n        staffs: [],\n        history: [],\n    });\n\n    // ----------------\n    // |   Requests   |\n    // ----------------\n\n    getStaffs() {\n        let endpoint = 'init';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'GET'\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    staffs: data.staffs,\n                });\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    personHistory(payload) {\n        let endpoint = 'person_history';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                let historys = [];\n                for (let i = 0; i < data.date.length; i++) {\n                    historys.push({\n                        key: i + 1,\n                        date: data.date[i],\n                        content: data.content[i],\n                    })\n                }\n                this.setState({\n                    history: historys,\n                });\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    // ----------------\n    // |   Handlers   |\n    // ----------------\n\n    handleFormSubmit = (inputs) => {\n        const payload = {\n            'name': inputs.name,\n            'start_date': inputs.start_date,\n            'end_date': inputs.end_date\n        };\n        this.personHistory(payload);\n    };\n\n    render() {\n        const columns = [\n            {\n                title: '日期',\n                dataIndex: 'date',\n                key: 'date',\n                render: text => (moment(text.toString(), \"YYYYMMDD\").format(\"YYYY年MM月DD日\"))\n            },\n            {\n                title: '晨报内容',\n                dataIndex: 'content',\n                key: 'content',\n                render: (text, record) => {  // handle change line problem\n                    if (text == null) return text;\n                    let text_split = text.toString().split('\\n');\n                    let result = null;\n                    for (let i = 0; i < text_split.length; i++) {\n                        if (i === 0) {\n                            result = text_split[i]\n                        } else {\n                            result = <span>{result}<br/>{text_split[i]}</span>\n                        }\n                    }\n                    return <div>{result}</div>\n                },\n            },\n        ];\n\n        const {Content} = Layout;\n\n        return (\n            <Layout className=\"layout\">\n                <MyHeader/>\n                <Content className=\"content\">\n                    <div>\n                        <h1 className=\"page_title\">历史晨报查询</h1>\n                        <div className='stat_form_area'>\n                            <br/>\n                            <StatForm staffs={this.state.staffs} handler={this.handleFormSubmit}/>\n                            <br/>\n                        </div>\n                        <div className='table_area'>\n                            <Table dataSource={this.state.history}\n                                   columns={columns}\n                                   pagination={{pageSize: 15}}/>\n                        </div>\n                    </div>\n                </Content>\n                <MyFooter/>\n            </Layout>\n        );\n    }\n}","import React, {Component} from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport {message, Layout, Row, Col} from 'antd';\nimport {ChartCard} from 'ant-design-pro/lib/Charts'\nimport \"antd/dist/antd.css\";\nimport \"ant-design-pro/dist/ant-design-pro.css\";\nimport moment from \"moment\";\nimport StatForm from \"./StatForm\";\nimport {MyHeader, MyFooter} from \"./MyLayout\"\nimport {host, port} from \"./config\"\n\nexport default class PersonStat extends Component {\n    constructor(props) {\n        super(props);\n        this.req_host = host;\n        this.req_port = port;\n\n        this.state = this.getInitialState();\n        this.getStaffs();\n    }\n\n    getInitialState = () => ({\n        staffs: [],\n        dates: [],\n        send_times: [],\n        you_diff: '',\n        total_average: '',\n        earliest_person: '',\n        earliest_diff: '',\n        latest_person: '',\n        latest_diff: '',\n    });\n\n    // ----------------\n    // |   Requests   |\n    // ----------------\n\n    getStaffs() {\n        let endpoint = 'init';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'GET'\n        }).then(res => res.json()).then(\n            data => {\n                this.setState({\n                    staffs: data.staffs,\n                });\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    personStat(payload) {\n        let endpoint = 'person_stat';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                let temp_send_times = [];\n                let temp_dates = [];\n                for (let i = 0; i < data.date.length; i++) {\n                    let cur_time_value = moment(data.time[i], 'HH:mm:ss');\n                    temp_dates.push(moment(data.date[i], \"YYYYMMDD\").format(\"YYYY-MM-DD\"));\n                    temp_send_times.push(\n                        cur_time_value.hour() * 60 * 60 +\n                        cur_time_value.minute() * 60 +\n                        cur_time_value.second()\n                    );\n                }\n                this.setState({\n                    dates: temp_dates,\n                    send_times: temp_send_times,\n                    you_diff: data.you_diff,\n                    total_average: data.total_average,\n                    earliest_person: data.earliest_person,\n                    earliest_diff: data.earliest_diff,\n                    latest_person: data.latest_person,\n                    latest_diff: data.latest_diff,\n                });\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    // ----------------\n    // |   Handlers   |\n    // ----------------\n\n    handleFormSubmit = (inputs) => {\n        const payload = {\n            // 'name': inputs.name,\n            'name': inputs.name,\n            'start_date': inputs.start_date,\n            'end_date': inputs.end_date\n        };\n        this.personStat(payload);\n    };\n\n    timeValueLabelFormat = (value, index) => {\n        let hour = Math.floor(value / 3600);\n        let minute = Math.floor((value % 3600) / 60);\n        return moment([2019, 1, 1, hour, minute]).format('HH:mm');\n    };\n\n    timeValueTooltipFormat = (params) => {\n        let index = params[0].axisValue;\n        let value = params[0].data;\n        if (isNaN(value)) {\n            return `发报日期：${index}<br/>当天未发晨报`;\n        }\n        let hour = Math.floor(value / 3600);\n        let minute = Math.floor((value % 3600) / 60);\n        let second = value % 60;\n        let label = moment([2019, 1, 1, hour, minute, second]).format('HH:mm:ss');\n        return `发报日期：${index}<br/>发报时间：${label}`;\n    };\n\n    timeValueMarklineFormat = (params) => {\n        let value = params.data.value;\n        let hour = Math.floor(value / 3600);\n        let minute = Math.floor((value % 3600) / 60);\n        let second = value % 60;\n        return moment([2019, 1, 1, hour, minute, second]).format('HH:mm:ss');\n    };\n\n    colorTimeDiff = (diff) => {\n        if (diff[0] === '早') {\n            return <span style={{color: \"green\"}}>{diff}</span>\n        } else if (diff[0] === '晚') {\n            return <span style={{color: \"red\"}}>{diff}</span>\n        } else {\n            return <span style={{color: \"blue\"}}>{diff}</span>\n        }\n    };\n\n    getOption = () => ({\n        tooltip: {\n            trigger: 'axis',\n            formatter: this.timeValueTooltipFormat\n        },\n        xAxis: {\n            type: 'category',\n            name: '日期',\n            data: this.state.dates\n        },\n        yAxis: {\n            type: 'value',\n            min: 0,\n            max: 24 * 60 * 60,\n            splitNumber: 8,\n            name: '时间',\n            axisLabel: {\n                formatter: this.timeValueLabelFormat\n            }\n        },\n        series: [\n            {\n                name: '发报时间',\n                type: 'line',\n                itemStyle: {\n                    normal: {\n                        color: '#177CB0'\n                    }\n                },\n                data: this.state.send_times,\n                markLine: {\n                    data: [\n                        {\n                            type: 'average',\n                            name: '平均发报时间',\n                        }\n                    ],\n                    label: {\n                        formatter: this.timeValueMarklineFormat\n                    }\n                }\n            },\n        ],\n    });\n\n    render() {\n\n        const {Content} = Layout;\n\n        return (\n            <Layout className=\"layout\">\n                <MyHeader/>\n                <Content className=\"content\">\n                    <div>\n                        <h1 className=\"page_title\">个人发报时间统计</h1>\n                        <div className='stat_form_area'>\n                            <br/>\n                            <StatForm staffs={this.state.staffs} handler={this.handleFormSubmit}/>\n                            <br/>\n                        </div>\n                        <div>\n                            <Row>\n                                <Col span={8} style={{padding: 20}}>\n                                    <ChartCard\n                                        title=\"全体员工平均发报时间\"\n                                        total={this.state.total_average}\n                                        footer={\n                                            <div>\n                                                <span>您的发报时间比平均时间</span>\n                                                <br/>\n                                                {this.colorTimeDiff(this.state.you_diff)}\n                                            </div>}\n                                        contentHeight={46}\n                                    />\n                                </Col>\n                                <Col span={8} style={{padding: 20}}>\n                                    <ChartCard\n                                        title=\"日均发报时间最早员工\"\n                                        total={this.state.earliest_person}\n                                        footer={\n                                            <div>\n                                                <span>比平均时间</span>\n                                                <br/>\n                                                {this.colorTimeDiff(this.state.earliest_diff)}\n                                            </div>}\n                                        contentHeight={46}\n                                    />\n                                </Col>\n                                <Col span={8} style={{padding: 20}}>\n                                    <ChartCard\n                                        title=\"日均发报时间最晚员工\"\n                                        total={this.state.latest_person}\n                                        footer={\n                                            <div>\n                                                <span>比平均时间</span>\n                                                <br/>\n                                                {this.colorTimeDiff(this.state.latest_diff)}\n                                            </div>}\n                                        contentHeight={46}\n                                    />\n                                </Col>\n                            </Row>\n                        </div>\n                        <div className='chart_area'>\n                            <ReactEcharts  option={this.getOption()} style={{height: 400}}/>\n                        </div>\n                    </div>\n                </Content>\n                <MyFooter/>\n            </Layout>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport {message, Layout, DatePicker, Button} from 'antd';\nimport \"antd/dist/antd.css\";\nimport moment from \"moment\";\nimport {MyHeader, MyFooter} from \"./MyLayout\"\nimport {host, port} from \"./config\"\n\nexport default class TotalStat extends Component {\n    constructor(props) {\n        super(props);\n        this.req_host = host;\n        this.req_port = port;\n\n        this.init_start_date = moment().add(-10, 'days');\n        this.init_end_date = moment();\n\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        dates: [],\n        send_persons: [],\n        absent_persons: [],\n    });\n\n    // ----------------\n    // |   Requests   |\n    // ----------------\n\n    totalStat(payload) {\n        let endpoint = 'total_stat';\n        fetch('http://' + this.req_host + ':' + this.req_port + '/' + endpoint, {\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(\n            data => {\n                let temp_send_persons = [];\n                let temp_absent_persons = [];\n                let temp_dates = [];\n                for (let i = 0; i < data.date.length; i++) {\n                    temp_dates.push(moment(data.date[i], \"YYYYMMDD\").format(\"YYYY-MM-DD\"));\n                    temp_send_persons.push(data.sent_cb_person[i]);\n                    temp_absent_persons.push(data.absent_person[i]);\n                }\n                this.setState({\n                    dates: temp_dates,\n                    send_persons: temp_send_persons,\n                    absent_persons: temp_absent_persons,\n                });\n            }\n        ).catch((err) => message.error(\"Server error!\", err))\n    }\n\n    // ----------------\n    // |   Handlers   |\n    // ----------------\n\n    componentDidMount() {\n        const payload = {\n            'start_date': this.init_start_date.format(\"YYYYMMDD\"),\n            'end_date': this.init_end_date.format(\"YYYYMMDD\"),\n        };\n        this.totalStat(payload);\n    }\n\n    handleRangePicker = (date, dateString) => {\n        const payload = {\n            'start_date': date[0].format(\"YYYYMMDD\"),\n            'end_date': date[1].format(\"YYYYMMDD\"),\n        };\n        this.totalStat(payload);\n    };\n\n    disabledDate = (current) => {\n        return current > moment().endOf('day');\n    };\n\n    getDatePickerShortCut = (shortcut) => {\n        let tmp_start_date = this.init_start_date;\n        let tmp_end_date = this.init_end_date;\n\n        if (shortcut === '本周') {\n            tmp_start_date = moment().startOf('week');\n            tmp_end_date = moment().endOf('week');\n        } else if (shortcut === '本月') {\n            tmp_start_date = moment().startOf('month');\n            tmp_end_date = moment().endOf('month');\n        } else if (shortcut === '本季度') {\n            tmp_start_date = moment().startOf('quarter');\n            tmp_end_date = moment().endOf('quarter');\n        }\n\n        return <Button className=\"shortcut_button\" type=\"ghost\" onClick={(e) => {\n            const payload = {\n                'start_date': tmp_start_date.format(\"YYYYMMDD\"),\n                'end_date': tmp_end_date.format(\"YYYYMMDD\"),\n            };\n            this.totalStat(payload);\n        }}>\n            {shortcut}\n        </Button>\n    };\n\n    getOption = () => ({\n        tooltip: {\n            trigger: 'axis',\n        },\n        legend: {\n            data: ['发报人数', '请假人数']\n        },\n        xAxis: {\n            type: 'category',\n            name: '日期',\n            data: this.state.dates\n        },\n        yAxis: {\n            type: 'value',\n            name: '人数',\n        },\n        series: [\n            {\n                name: '发报人数',\n                type: 'bar',\n                stack: '总人数',\n                data: this.state.send_persons,\n            },\n            {\n                name: '请假人数',\n                type: 'bar',\n                stack: '总人数',\n                data: this.state.absent_persons,\n            },\n        ],\n        color: [\n            '#1890ff',\n            '#2f4554'\n        ]\n    });\n\n    render() {\n\n        const {RangePicker} = DatePicker;\n\n        const {Content} = Layout;\n\n        return (\n            <Layout className=\"layout\">\n                <MyHeader/>\n                <Content className=\"content\">\n                    <div>\n                        <h1 className=\"page_title\">全局统计</h1>\n                        <div className='stat_form_area'>\n                            <RangePicker\n                                defaultValue={[\n                                    this.init_start_date,\n                                    this.init_end_date\n                                ]}\n                                disabledDate={this.disabledDate}\n                                ranges={{\n                                    Today: [moment(), moment()],\n                                    'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                    'Last 10 Days': [moment().add(-10, 'days'), moment()],\n                                    'Last 3 Months': [moment().add(-3, 'months'), moment()],\n                                    'Last Year': [moment().add(-1, 'year'), moment()],\n                                }}\n                                onChange={this.handleRangePicker}\n                                allowClear={false}/>\n                            {this.getDatePickerShortCut('本周')}\n                            {this.getDatePickerShortCut('本月')}\n                            {this.getDatePickerShortCut('本季度')}\n                        </div>\n                        <br/>\n                        <div className='chart_area'>\n                            <ReactEcharts option={this.getOption()} style={{height: 400}}/>\n                        </div>\n                    </div>\n                </Content>\n                <MyFooter/>\n            </Layout>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Layout } from 'antd';\nimport Home from \"./components/Home\";\nimport PersonHistory from \"./components/PersonHistory\";\nimport PersonStat from \"./components/PersonStat\";\nimport TotalStat from \"./components/TotalStat\";\nimport {MySider} from \"./components/MyLayout\";\n\nclass App extends Component {\n  render() {\n    return (\n        <Layout style={{ minHeight: '100vh' }}>\n            <Router>\n                <MySider/>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/PersonHistory\" component={PersonHistory} />\n                <Route path=\"/PersonStat\" component={PersonStat} />\n                <Route path=\"/TotalStat\" component={TotalStat} />\n            </Router>\n        </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}